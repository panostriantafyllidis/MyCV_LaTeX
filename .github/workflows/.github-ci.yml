# name: Build and Release

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch: # Add manual triggering.

# jobs:
#   release:
#     runs-on: windows-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4.1.1

#       - name: Get commit information
#         id: commit_info
#         run: echo "::set-output name=commit_sha::$(git rev-parse --short HEAD)"

#       - name: Upload MyCV.pdf
#         uses: actions/upload-artifact@v4.3.1
#         with:
#           name: MyCV
#           path: MyCV.pdf

#       - name: Set Date and Time Tag
#         id: set_date_time_tag
#         run: |
#           $CURRENT_DATE = Get-Date -Format "yyyy-MM-dd"
#           $CURRENT_TIME = Get-Date -Format "HH:mm:ss"
#           echo "::set-output name=date_tag::$CURRENT_DATE"
#           echo "::set-output name=time_tag::$CURRENT_TIME"

#       - name: Set Release Number
#         id: set_release_number
#         run: echo "::set-output name=release_number::v${{ github.run_number }}" # Set release number as 'v' followed by the run number of the workflow

#       - name: Create Release
#         id: create_release
#         uses: softprops/action-gh-release@v2.0.4
#         with:
#           files: MyCV.pdf
#           tag_name: ${{ steps.set_release_number.outputs.release_number }} # Use the run number as the tag name
#           name: Released on ${{ steps.set_date_time_tag.outputs.date_tag }} at ${{ steps.set_date_time_tag.outputs.time_tag }} # Include both date and time in the release name
#           draft: false
#           prerelease: false
#         env:
#           GITHUB_TOKEN: ${{ secrets.PATTOKEN }}

name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch: # Add manual triggering.

jobs:
  release:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Get commit information
        id: commit_info
        run: echo "::set-output name=commit_sha::$(git rev-parse --short HEAD)"

      - name: Upload MyCV.pdf and MyEuropassCV.pdf
        uses: actions/upload-artifact@v4.3.1
        with:
          name: CVs
          path: |
            MyCV.pdf
            MyEuropassCV.pdf

      - name: Set Date and Time Tag
        id: set_date_time_tag
        run: |
          $CURRENT_DATE = Get-Date -Format "yyyy-MM-dd"
          $CURRENT_TIME = Get-Date -Format "HH:mm:ss"
          echo "::set-output name=date_tag::$CURRENT_DATE"
          echo "::set-output name=time_tag::$CURRENT_TIME"

      - name: Set Release Number
        id: set_release_number
        run: echo "::set-output name=release_number::v${{ github.run_number }}" # Set release number as 'v' followed by the run number of the workflow

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2.0.4
        with:
          files: |
            MyCV.pdf
            MyEuropassCV.pdf
          tag_name: ${{ steps.set_release_number.outputs.release_number }} # Use the run number as the tag name
          name: Released on ${{ steps.set_date_time_tag.outputs.date_tag }} at ${{ steps.set_date_time_tag.outputs.time_tag }} # Include both date and time in the release name
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PATTOKEN }}

      # New step to update CV in website repo
      - name: Checkout website repository
        uses: actions/checkout@v4.1.1
        with:
          repository: "panostriantafyllidis/panostriantafyllidis.github.io"
          token: ${{ secrets.PATTOKEN }}
          path: "website"

      - name: Copy MyCV.pdf to the website repository
        run: cp MyCV.pdf website/assets/docs/MyCV/MyCV.pdf

      - name: Copy MyEuropassCV.pdf to the website repository
        run: cp MyEuropassCV.pdf website/assets/docs/MyCV/MyEuropassCV.pdf

      - name: Commit and push update
        run: |
          cd website
          git config user.name 'github-actions'
          git config user.email 'github-actions@github.com'
          git add assets/docs/MyCV/MyCV.pdf
          git add assets/docs/MyCV/MyEuropassCV.pdf
          git commit -m 'CVs updated'
          git push
